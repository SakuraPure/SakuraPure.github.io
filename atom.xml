<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>停舟之处</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-10-08T01:19:32.098Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>没入门算法题——结构体初试探</title>
    <link href="http://example.com/2021/10/08/%E6%B2%A1%E5%85%A5%E9%97%A8%E7%AE%97%E6%B3%95%E9%A2%98%E2%80%94%E2%80%94%E7%BB%93%E6%9E%84%E4%BD%93%E5%88%9D%E8%AF%95%E6%8E%A2/"/>
    <id>http://example.com/2021/10/08/%E6%B2%A1%E5%85%A5%E9%97%A8%E7%AE%97%E6%B3%95%E9%A2%98%E2%80%94%E2%80%94%E7%BB%93%E6%9E%84%E4%BD%93%E5%88%9D%E8%AF%95%E6%8E%A2/</id>
    <published>2021-10-08T00:47:58.344Z</published>
    <updated>2021-10-08T01:19:32.098Z</updated>
    
    <content type="html"><![CDATA[<p>刚刚结构体做的第一个题，但是因为大佬觉得struct太屑，让我用class，嘛，反正对于这类简单的结构体题都差不多<span id="more"></span></p><hr><h1 id="K-stduoj算法大赛成绩排序"><a href="#K-stduoj算法大赛成绩排序" class="headerlink" title="K. stduoj算法大赛成绩排序"></a>K. stduoj算法大赛成绩排序</h1><h2 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h2><p>N年一度的stduoj算法大赛开始了，比赛共6道题，满分600分。如果成绩P爆零，可以获得Bad称号（Bad）；在1分到200分之间（包含100分，不包含200分）可以获得Not good称号（Not good）；在200分到300分之间（包含200分，不包含300分）可以获得铜牌（Bronze  medal）；在300分到400分之间（包含300分，不包含400分）可以获得银牌（Silver  medal）；在400分以上（包含400分）可以获得金牌（Gold medal）。紧张而激烈的比赛很快就过去了，面对复杂的成绩，我们果断想到了  某软  Excel，来给大家计算排名。可是由于十一中机房刚刚换了电脑系统，某软的Excel未调试好，于是我们邀请来了机智的你，帮我们设计一个程序，来计算出大家的排名</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行，一个整数N，表示共有N个同学参加比赛。</p><p>接下来有N行，每行有 参赛者的姓名（拼音）和总成绩</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>按照成绩从大到小的顺序输出N行 每行包含 参赛者的姓名 ， 总成绩 ， 称号（中间用空格隔开）</p><h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><p>input</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">3</span><br><span class="hljs-attribute">Chenyao</span> <span class="hljs-number">0</span><br><span class="hljs-attribute">XTT</span> <span class="hljs-number">420</span><br><span class="hljs-attribute">LZX</span> <span class="hljs-number">500</span><br></code></pre></td></tr></table></figure><p>output</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">LZX</span> <span class="hljs-number">500</span> Gold medal<br><span class="hljs-attribute">XTT</span> <span class="hljs-number">420</span> Gold medal<br><span class="hljs-attribute">Chenyao</span> <span class="hljs-number">0</span> Bad<br></code></pre></td></tr></table></figure><h2 id="数据范围与提示"><a href="#数据范围与提示" class="headerlink" title="数据范围与提示"></a>数据范围与提示</h2><p>1&lt;N&lt;300 0&lt;=总成绩&lt;=600 姓名字符长度不超过20 如果总成绩相等，按照输入顺序排列</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span> <span class="hljs-comment">//算法函数，用于使用sort()</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">1001000</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">student</span>&#123;</span>   <span class="hljs-comment">//&quot;student&quot;是一个可选标志，用来引用该结构体的快速标记</span><br>    <span class="hljs-keyword">public</span>:<span class="hljs-comment">//必须为public，否则将无法引用</span><br>        string name; <span class="hljs-comment">//&quot;string&quot; 为字符串类型，用此类型原因为char会读取空格而它不会</span><br>        <span class="hljs-keyword">int</span> s;<br>&#125;a[N];<span class="hljs-comment">//这不用说了吧</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(student a,student b)</span></span>&#123;<br>    <span class="hljs-keyword">return</span> a.s&gt;b.s;<br>&#125;<span class="hljs-comment">//由于sort()只能按从小到大排序，所以我们需要为sort定义一个规则cmp，return返回值即为规则内容。</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;a[i].name&gt;&gt;a[i].s; <span class="hljs-comment">//结构体内元素的引用方式，用标志a[i].+元素类型</span><br>    &#125;<br>    <span class="hljs-built_in">sort</span>(a,a+n,cmp);<span class="hljs-comment">//sort()的书写规则为sort(起始元素，结尾元素，cmp规则)</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(a[i].s==<span class="hljs-number">0</span>)&#123;cout&lt;&lt;a[i].name&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;a[i].s&lt;&lt;<span class="hljs-string">&quot; Bad\n&quot;</span>;<span class="hljs-keyword">continue</span>;&#125;<br>        <span class="hljs-comment">//用if条件来排除爆零这个特殊条件</span><br>        <span class="hljs-built_in"><span class="hljs-keyword">switch</span></span>(a[i].s/<span class="hljs-number">100</span>)<br>        &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>            cout&lt;&lt;a[i].name&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;a[i].s&lt;&lt;<span class="hljs-string">&quot; Not good\n&quot;</span>;<br>            <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            cout&lt;&lt;a[i].name&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;a[i].s&lt;&lt;<span class="hljs-string">&quot; Not good\n&quot;</span>;<br>            <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>            cout&lt;&lt;a[i].name&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;a[i].s&lt;&lt;<span class="hljs-string">&quot; Bronze medal\n&quot;</span>;<br>            <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>            cout&lt;&lt;a[i].name&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;a[i].s&lt;&lt;<span class="hljs-string">&quot; Silver medal\n&quot;</span>;<br>            <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<br>            cout&lt;&lt;a[i].name&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;a[i].s&lt;&lt;<span class="hljs-string">&quot; Gold medal\n&quot;</span>;<br>            <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<br>            cout&lt;&lt;a[i].name&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;a[i].s&lt;&lt;<span class="hljs-string">&quot; Gold medal\n&quot;</span>;<br>            <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:<br>            cout&lt;&lt;a[i].name&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;a[i].s&lt;&lt;<span class="hljs-string">&quot; Gold medal\n&quot;</span>;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr><p>这题就是个模板吧，注意c++才有class，c没有只能用struct，但对于这种用途，strcut语法就是去掉public：把class改成struct，可csdn。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;刚刚结构体做的第一个题，但是因为大佬觉得struct太屑，让我用class，嘛，反正对于这类简单的结构体题都差不多</summary>
    
    
    
    <category term="C语言算法题" scheme="http://example.com/categories/C%E8%AF%AD%E8%A8%80%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="c++" scheme="http://example.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>没入门算法题——判断素数</title>
    <link href="http://example.com/2021/10/06/%E6%B2%A1%E5%85%A5%E9%97%A8%E7%AE%97%E6%B3%95%E9%A2%98%E2%80%94%E2%80%94%E5%88%A4%E6%96%AD%E7%B4%A0%E6%95%B0/"/>
    <id>http://example.com/2021/10/06/%E6%B2%A1%E5%85%A5%E9%97%A8%E7%AE%97%E6%B3%95%E9%A2%98%E2%80%94%E2%80%94%E5%88%A4%E6%96%AD%E7%B4%A0%E6%95%B0/</id>
    <published>2021-10-06T14:15:09.663Z</published>
    <updated>2021-10-07T11:13:35.391Z</updated>
    
    <content type="html"><![CDATA[<p>我菜逼这个都不会写，赶紧写个题解记一记<span id="more"></span></p><h1 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h1><p>输入一个自然数，现在请你判断是否是质数。如果是的话输出 “Yes””Yes””Yes” 否则输出 “No””No””No”。<br> 一个自然数是质数当且仅当其因子只有 111 和其本身。</p><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>输入有多组数据，第一行为一个整数 QQQ ，表示有 QQQ 组数据。</p><p>接下来有 QQQ 行，每行一个整数，为待判断的数字。</p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><p>输出 Q 行，每行输出 Yes或者 No ，表示是否是质数。注意大小写。</p><h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><p>输入</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs">3<br>5<br>6<br>7<br></code></pre></td></tr></table></figure><p>输出</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">Yes</span><br><span class="hljs-keyword">No</span><br><span class="hljs-keyword">Yes</span><br></code></pre></td></tr></table></figure><hr><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>简单的，一个素数m（不等于2），如果能被2到m-1之间的数整除，那这个数肯定是个素数，但这样有些低效，我们进一步优化。</p><p>一个非素数，也就是能被2到m-1之间的数整除的数，他整除出来的两个因子，一个会小于<img src="https://s3.bmp.ovh/imgs/2021/10/467eecc79973865b.jpg" alt="img"></p><p>另一个就会大于<img src="https://s3.bmp.ovh/imgs/2021/10/467eecc79973865b.jpg" alt="img">，举个例子：16=2*8，2小于4，8大于4。所以咱就能把2~m-1缩小到2~ <img src="https://s3.bmp.ovh/imgs/2021/10/467eecc79973865b.jpg" alt="img">啦！</p><hr><p>下面贴上代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> n=<span class="hljs-number">10010</span>;<br><span class="hljs-keyword">int</span> a;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> N;<br>    cin&gt;&gt;N;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;i&lt;N;i++)&#123;<br>        cin&gt;&gt;a;<br>        <span class="hljs-keyword">if</span>(a==<span class="hljs-number">2</span>)&#123;cout&lt;&lt;<span class="hljs-string">&quot;Yes&quot;</span>;<span class="hljs-keyword">continue</span>;&#125;<span class="hljs-comment">//用于排除2，continue用于加速循环防止运行else后的输出</span><br>        <span class="hljs-keyword">if</span>(a&gt;<span class="hljs-number">2</span>)<br>        &#123;<br>            <span class="hljs-keyword">int</span> j=<span class="hljs-number">2</span>;<br>            <span class="hljs-keyword">for</span>(j;j&lt;=(<span class="hljs-keyword">int</span>)<span class="hljs-built_in">sqrt</span>(a);j++)<span class="hljs-comment">//2~根号a的遍历</span><br>            &#123;<br>                <span class="hljs-keyword">if</span>(a%j==<span class="hljs-number">0</span>)<br>                &#123;<br>                    cout&lt;&lt;<span class="hljs-string">&quot;No\n&quot;</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>                <span class="hljs-keyword">if</span>(j+<span class="hljs-number">1</span>&gt;(<span class="hljs-keyword">int</span>)<span class="hljs-built_in">sqrt</span>(a))<span class="hljs-comment">//如果2到根号a都没有整除的那到下一位大于根号a就输出yes</span><br>                &#123;<br>                    cout&lt;&lt;<span class="hljs-string">&quot;Yes\n&quot;</span>;<br>                &#125;<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;No\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr><p>第一次尝试题解，写的贼垃圾。。。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;我菜逼这个都不会写，赶紧写个题解记一记</summary>
    
    
    
    <category term="C语言算法题" scheme="http://example.com/categories/C%E8%AF%AD%E8%A8%80%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="c" scheme="http://example.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/10/03/hello-world/"/>
    <id>http://example.com/2021/10/03/hello-world/</id>
    <published>2021-10-03T09:40:00.120Z</published>
    <updated>2021-10-03T09:40:00.120Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
